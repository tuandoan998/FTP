1.Login : 
2.List folder in server (ls,dir) 	:
3.Upload a file (put) 				: 
4.Download a file (get) 			: 
5.Upload many files (mput) 			:
6.Download many files (mget) 		:
7.Change path in server (cd) 		: send "cwd directory" - done 
8.Change path in client (lcd)		 		:
9.Delete a file in server (delete) 			: send "del filename.extension" - done
10.Delete many files in server (mdelete) 	: send "mdel fileA.txt fileB.txt" - request action - not yet done
11.Create a folder in server (mkdir) 		: 
12.Delete a empty folder in server (rmdir) 	: 
13.Show current path in server (pwd) 		: send "pwd" - done
14.Passive state (passive) 					: send "pasv" - done
15.Get off server (quit,exit) 				: send "quit" - done



*note:
	- Always having a thread to control the connection between server and client.
	- Create a User class within username, password?
	

-----------------------------------------------------------------------------------------
FTP commands - Overview

simple commands
//   QUIT <CRLF>
//   PASV <CRLF>
//   PWD  <CRLF>
//   PORT <SP> <host-port> <CRLF>
//   TYPE <SP> <type-code> <CRLF>
//   CWD  <SP> <pathname> <CRLF>
//   MKD  <SP> <pathname> <CRLF>
//   HELP [<SP> <string>] <CRLF>
//   DELE <SP> <pathname> <CRLF>
//   MODE <SP> <mode-code> <CRLF>

// commands for logon sequence
//   USER <SP> <username> <CRLF>
//   PASS <SP> <password> <CRLF>

//   REST <SP> <marker> <CRLF>
//   LIST [<SP> <pathname>] <CRLF>
//   NLST [<SP> <pathname>] <CRLF>

// non RFC-Commands
//   SIZE <SP> <pathname> <CRLF>
