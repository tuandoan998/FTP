1.Login: 
	send USER ...
	     PASS ...     
2.List folder in server (ls,dir): 
	(ls) enter passive mode first
         	   passively connect on the port sent back from the server
         	   create a new socket based on the new connection
 	(dir) send LIST to the server, write using clientSd, receive using new socket read from the server //after send pasv	
3.Upload a file (put) : 
	open a file stream to the filename passed in store contents in a buffer //first set type to "I" (image, binary mode)
        enter passive mode 
            passively connect on the port sent back from the server
            create a new socket based on the new connection
        send STOR filename
4.Download a file (get) : 
	//first set type to "I" (image, binary mode)
        enter passive mode 
            passively connect on the port sent back from the server
            create a new socket based on the new connection
        send RETR filename
5.Upload many files (mput) :
	
6.Download many files (mget) :
7.Change path in server (cd) 		: send "cwd directory" - done 
8.Change path in client (lcd)		 		:
9.Delete a file in server (delete) 			: send "del filename.extension" - done
10.Delete many files in server (mdelete) 	: send "mdel fileA.txt fileB.txt" - request action - not yet done
			//Sang edited
			send DELE filename	
11.Create a folder in server (mkdir) 		: 
12.Delete a empty folder in server (rmdir) 	: 
13.Show current path in server (pwd) :
		
14.Passive state (passive) :
		//Sang edited
		send PASV
15.Get off server (quit,exit) 	:
		//sang edited
		send QUIT
		
*note:
	- Always having a thread to control the connection between server and client.
	- Create a User class within username, password?
	
